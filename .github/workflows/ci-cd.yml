name: CI/CD Pipeline

on:
    push:
        branches:
            - main

jobs:
    test:
        runs-on: ubuntu-latest
        env:
            DEVELOPMENT: ${{ secrets.DEVELOPMENT }}
            MONGO_URI: ${{ secrets.MONGO_URI }}
            DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
            SECRET_KEY: ${{ secrets.SECRET_KEY }}
            ALGORITHM: ${{ secrets.ALGORITHM }}
            ACCESS_TOKEN_EXPIRE_MINUTES: ${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }}
            REFRESH_TOKEN_EXPIRE_DAYS: ${{ secrets.REFRESH_TOKEN_EXPIRE_DAYS }}
            GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
            MAILTRAP_PORT: ${{ secrets.MAILTRAP_PORT }}
            SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
            MAILTRAP_LOGIN: ${{ secrets.MAILTRAP_LOGIN }}
            MAILTRAP_PASSWORD: ${{ secrets.MAILTRAP_PASSWORD }}
            SENDER_EMAIL: ${{ secrets.SENDER_EMAIL }}
            VERIFICATION_CODE_EXPIRE_MINUTES: ${{ secrets.VERIFICATION_CODE_EXPIRE_MINUTES }}
            GOOGLE_AUTH_URL: ${{ secrets.GOOGLE_AUTH_URL }}
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_REGION: ${{ secrets.AWS_REGION }}
            S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
            HOST: ${{ secrets.HOST }}
            PORT: ${{ secrets.PORT }}
            FRONTEND_URL: ${{ secrets.FRONTEND_URL }}

        # steps:
        #     - name: Checkout code
        #       uses: actions/checkout@v4

        #     - name: Set up Python
        #       uses: actions/setup-python@v4
        #       with:
        #           python-version: "3.10"

        #     - name: Cache pip dependencies
        #       uses: actions/cache@v3
        #       with:
        #           path: ~/.cache/pip
        #           key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        #           restore-keys: |
        #               ${{ runner.os }}-pip-

        #     - name: Install dependencies
        #       run: |
        #           pip install -r requirements.txt
        #           pip install pytest pytest-cov pytest-asyncio httpx

        #     - name: Run unit tests
        #       run: |
        #           # Load test environment variables
        #           export $(cat .env.test | xargs)
        #           pytest tests

        #     - name: Run linting
        #       run: |
        #           pip install flake8 black isort
        #           flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        #           black . --verbose
        #           isort . --verbose

    build:
        runs-on: ubuntu-latest
        # needs: test

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2

            - name: Log in to Docker Hub
              uses: docker/login-action@v2
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}

            - name: Build and push Docker image
              uses: docker/build-push-action@v4
              with:
                  context: .
                  push: true
                  tags: minhtai03/mammoai-backend:cpu-only
                  no-cache: true

    deploy:
        runs-on: ubuntu-latest
        needs: build
        steps:
            - name: Deploy to VPS
              uses: appleboy/ssh-action@v0.1.5
              with:
                  host: ${{ secrets.VPS_HOST }}
                  username: ${{ secrets.VPS_USERNAME }}
                  key: ${{ secrets.VPS_SSH_KEY }}
                  port: ${{ secrets.VPS_PORT }}
                  script: |
                      sudo docker pull minhtai03/mammoai-backend:cpu-only
                      sudo docker stop mammoai-backend_container || true
                      sudo docker rm mammoai-backend_container || true
                      sudo docker run --env-file .env -d -p 8015:8015 --name mammoai-backend_container --restart unless-stopped minhtai03/mammoai-backend:cpu-only
